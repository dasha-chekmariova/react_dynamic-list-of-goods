{"version":3,"sources":["api/goods.ts","component/GoodsList.tsx","App.tsx","index.tsx"],"names":["API_URL","GoodsList","goods","map","good","style","color","name","id","App","useState","setGoods","className","type","onClick","a","fetch","then","response","json","sort","firstGood","secondGood","localeCompare","filter","_el","i","el","ReactDOM","render","document","getElementById"],"mappings":"sOACMA,G,MAAO,yEAQN,I,OCFMC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEEC,MAAO,CAAEC,MAAOF,EAAKE,OAFvB,SAIGF,EAAKG,MAHDH,EAAKI,UCgCHC,EApCW,WACxB,MAA0BC,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,mCAEA,wBACEA,UAAU,oBACVC,KAAK,SACLC,QAAO,sBAAE,sBAAAC,EAAA,kEACPJ,EADO,SFbRK,MAAMhB,GACViB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIA,KEWD,uGAHX,iBAQA,wBACEP,UAAU,oBACVC,KAAK,SACLC,QAAO,sBAAE,sBAAAC,EAAA,kEACPJ,EADO,SFfRK,MAAMhB,GACViB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIA,EAAKC,MAAK,SAACC,EAAiBC,GAAlB,OACtBD,EAAUd,KAAKgB,cAAcD,EAAWf,SACvCiB,QAAO,SAACC,EAAWC,GAAZ,OAA0BA,EAAI,QEW3B,uGAHX,eAQA,wBACEd,UAAU,mBACVC,KAAK,SACLC,QAAO,sBAAE,sBAAAC,EAAA,kEACPJ,EADO,SFfRK,MAAMhB,GACViB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIA,EAAKK,QAAO,SAACG,GAAD,MAAyC,QAAbA,EAAGrB,YEa5C,uGAHX,iBAQA,cAAC,EAAD,CAAWJ,MAAOA,Q,MClCxB0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6d68abff.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(json => json);\n}\n\nexport const get5First = () => {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(json => json.sort((firstGood: Good, secondGood: Good) => (\n      firstGood.name.localeCompare(secondGood.name)))\n      .filter((_el: Good, i: number) => i < 5));\n};\n\nexport const getRedGoods = () => {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .then(json => json.filter((el: { color: string; }) => el.color === 'red'));\n};\n","import React from 'react';\n// import { Good } from '../react-app-env';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './component/GoodsList';\n\nconst App: React.FC<{}> = () => {\n  const [goods, setGoods] = useState([]);\n\n  return (\n    <div className=\"box\">\n      <h1 className=\"title\">Dynamic list of Goods</h1>\n\n      <button\n        className=\"button is-success\"\n        type=\"button\"\n        onClick={async () => (\n          setGoods(await getAll()))}\n      >\n        All\n      </button>\n      <button\n        className=\"button is-warning\"\n        type=\"button\"\n        onClick={async () => (\n          setGoods(await get5First()))}\n      >\n        5\n      </button>\n      <button\n        className=\"button is-danger\"\n        type=\"button\"\n        onClick={async () => (\n          setGoods(await getRedGoods()))}\n      >\n        Red\n      </button>\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}